@page "/faqs/{text?}"
@using Frontend.Helpers
@using ESOF.WebApp.DBLayer.Entities.FAQ
@using ESOF.WebApp.DBLayer.Entities
@attribute [StreamRendering]
@inject ApiHelper ApiHelper
@rendermode InteractiveServer

<PageTitle>Jobs FAQ</PageTitle>

<div class="d-flex justify-content-between">
<h1>Job Name FAQ</h1>
    
</div>
<hr/>

<div>
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h3 class="mt-2">New Question</h3>
            <textarea
                @onchange="e => Text = e.Value.ToString()" 
class="form-control mb-3" placeholder="Your Question"></textarea>
            <button class="btn btn-primary" @onclick="SubmitQuestion">Submit</button>
        </div>
    </div>
    
    <div class="card shadow-sm">
        <div class="card-header">
            <h3>Previously Asked Questions (@_questionCount)</h3>
        </div>
        <div class="card-body">
            <div>
            @if (_questions != null && _questions.Any())
            {
                foreach (var question in _questions)
                {
                    <QuestionPreview Question="@question" />
                }
            }
            else
            {
                <p>No questions have been asked yet.</p>
            }
        </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? Text { get; set; }
    
    private string[]? _userEmails;
    private List<ESOF.WebApp.DBLayer.Entities.FAQ.Question>? _questions;
    private string _selectedJobId = "1";
    private int _questionCount => _questions?.Count ?? 0;

    protected override async Task OnInitializedAsync()
    {
        _questions = new List<ESOF.WebApp.DBLayer.Entities.FAQ.Question>();
        ESOF.WebApp.DBLayer.Entities.FAQ.Question question = new ESOF.WebApp.DBLayer.Entities.FAQ.Question();
        question.QuestionText = "How do I apply for this job?";
        question.Answers = new List<Answer>();
        Answer answer = new Answer();
        answer.AnswerText = "You can apply for this job by clicking the 'Apply' button on the job page.";
        question.Answers.Add(answer);
        User user = new User();
        user.Email = "admin@mail.com";
        answer.Author = user;
        _questions.Add(question);
    }

    private void SubmitQuestion()
    {
        if (Text == null)
        {
            return;
        }
        ESOF.WebApp.DBLayer.Entities.FAQ.Question dummy = new ESOF.WebApp.DBLayer.Entities.FAQ.Question();
        dummy.QuestionText = Text;
        dummy.QuestionId = new Guid();
        dummy.Answers = new List<Answer>();
        _questions.Add(dummy);
    }
}
