@page "/Company"
@inject HttpClient HttpClient

<PageTitle>Companies</PageTitle>

<h1>Companies</h1>

@if (_companies == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
<table class="table">
    <thead>
    <tr>
        <th>Name</th>
        <th>Location</th>
        <th>Min Employees</th>
        <th>Max Employees</th>
        <th>Site</th>
        <th>URL Image</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var company in _companies)
    {
    <tr>
        <td>@company.Name</td>
        <td>@company.Location</td>
        <td>@company.MinFunc</td>
        <td>@company.MaxFunc</td>
        <td>@company.Site</td>
        <td>@company.UrlImage</td>
    </tr>
    }
    </tbody>
</table>
}

@code {
private List<ESOF.WebApp.DBLayer.Entities.Companies> _companies;

protected override async Task OnInitializedAsync()
{
try
{
_companies = await HttpClient.GetFromJsonAsync<List<ESOF.WebApp.DBLayer.Entities.Companies>>("companies");
}
catch (Exception ex)
{
Console.WriteLine($"Failed to fetch companies: {ex.Message}");
// Handle error gracefully (display message to user, log error, etc.)
}
}
}
