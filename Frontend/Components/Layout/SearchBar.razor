@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using ESOF.WebApp.DBLayer.Entities
@using Frontend.Components.Pages
@using Frontend.Services
@using Frontend.Services.Contracts
@inherits SearchBase

<div class="search-container">
    <form method="get" action="/search/results" class="search-form">
        <div class="input-row">
            <input type="text" @bind="searchText" placeholder="Search Text" name="searchText" class="search-input" required/>
            <button type="submit" class="submit-button">Ok</button>
        </div>
        @if (SearchService.searchPerformed)
        {
        <div class="select-row">
        <!--    <select name="skill" @bind="skill" class="custom-select">
                <option value="">Skills</option>
                @if (Skills != null && Skills.Any())
                {
                @foreach (var skill in Skills)
                {
                <option value="@skill.Name">@skill.Name</option>
                }
                }
            </select>-->
              <!--  <select name="job" class="custom-select">
                    <option value="">Jobs</option>
                    @if (Jobs != null && Jobs.Any())
                    {
                    @foreach (var job in Jobs)
                    {
                    <option value="@job.Position">@job.Position</option>
                    }
                    }
                </select>-->
              <a href="search/people?searchText=@searchText" type="button" class="btn-primary">
                  People
              </a>
              
              <button type="button" class="btn-primary">
                  Jobs
              </button>

        <!--      <select name="location" class="custom-select">
                    <option value="">Location</option>
                    @if (Locations != null && Locations.Any())
                    {
                    @foreach (var location in Locations)
                    {
                    <option value="@location">@location</option>
                    }
                    }
                </select>-->
        </div>
        }
    </form>
</div>


@code {
    
    [SupplyParameterFromQuery(Name= "searchText")]
    private string searchText { get; set; } = string.Empty;
    private string skill { get; set; } = string.Empty;

[Inject] public ISearchService SearchService { get; set; }
}
